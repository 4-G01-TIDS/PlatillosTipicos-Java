/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package User;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.UUID;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import platillostipicos.accesoadatos.CommentDAL;
import platillostipicos.accesoadatos.PublicationDAL;
import platillostipicos.accesoadatos.UserDAL;
import platillostipicos.appdesktop.FrmInicio;
import platillostipicos.appdesktop.utils.*;
import platillostipicos.entidadesdenegocio.*;

/**
 *
 * @author MINEDUCYT
 */
public class FrmUserLec extends javax.swing.JFrame {
    
    private javax.swing.JFrame frmPadre; 
    
     private class ColumnaTabla {

        static final int ID = 0;
        static final int NAME = 1;
        static final int LASTNAME = 2;
        static final int IMG = 3;
        static final int EMAIL = 4;
        static final int PHONE = 5;

    }
    
    
    private void buscar() {
        try {
            User publicationSearch = new User();
            ArrayList<User> publications = UserDAL.buscar(publicationSearch);

            iniciarDatosDeLaTabla(publications);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Sucedio el siguiente error: " + ex.getMessage());
        }
    }
    
    

    public void iniciarDatosDeLaTabla(ArrayList<User> pUser) throws Exception {
        DefaultTableModel model = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        model.addColumn("Id");
        model.addColumn("Name");
        model.addColumn("LastName");
        model.addColumn("ImgUser");
        model.addColumn("Email");
        model.addColumn("PhoneNumber");
        
        

        this.tbUser.setModel(model);
        Object row[] = null;

        ArrayList<String> comentarios = new ArrayList<>();
        for (int i = 0; i < pUser.size(); i++) {
            User publication = pUser.get(i);
            model.addRow(row);
            model.setValueAt(publication.getId(), i, ColumnaTabla.ID);
            model.setValueAt(publication.getName(), i, ColumnaTabla.NAME);
            model.setValueAt(publication.getLastName(), i, ColumnaTabla.LASTNAME);
            //model.setValueAt(publication.getImgUser(), i, ColumnaTabla.IMG);
            
            ImageRenderer.configurarColumnaImagen(tbUser, ColumnaTabla.IMG, publication.getImgUser(), i, model);
            model.setValueAt(publication.getEmail(), i, ColumnaTabla.EMAIL);
            model.setValueAt(publication.getPhoneNumber(), i, ColumnaTabla.PHONE);
            
            
//        ocultarColumnasDeLaTabla(ColumnaTabla.ID);
    }
    
    }
    
   private void abrirFormularioDeEscritura(int pOpcionForm) {
        User publication = new User();
        if (pOpcionForm == FormEscOpcion.CREAR || this.llenarEntidadConLaFilaSeleccionadaDeLaTabla(publication)) {
            FrmUserEsc frmPublicationEsc = new FrmUserEsc(publication, pOpcionForm, this);
            frmPublicationEsc.setVisible(true);
            this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "No ha seleccionado ninguna fila.");
        }
    }
   
   private boolean llenarEntidadConLaFilaSeleccionadaDeLaTabla(User pPublication) {
        int filaSelect;
        boolean isSelectRow = false;
        filaSelect = this.tbUser.getSelectedRow();
        if (filaSelect != -1) {
            isSelectRow = true;
            pPublication.setId((UUID) this.tbUser.getValueAt(filaSelect, ColumnaTabla.ID));
            pPublication.setName((String) this.tbUser.getValueAt(filaSelect, ColumnaTabla.NAME));
            pPublication.setEmail((String) this.tbUser.getValueAt(filaSelect, ColumnaTabla.NAME));
        }
        return isSelectRow;
    }
    
    
    public FrmUserLec(javax.swing.JFrame pFrmPadre) {
        initComponents();
        this.setExtendedState(MAXIMIZED_BOTH);
        iniciarDatos(pFrmPadre);
    }
    
     private void iniciarDatos(javax.swing.JFrame pFrmPadre) {
        frmPadre = pFrmPadre;
        pFrmPadre.setEnabled(true); // deshabilitar el formulario FrmInicio
        buscar();
    }
    
    /**
     * Creates new form FrmUserLec
     */
    public FrmUserLec() {
        initComponents();
        buscar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbUser = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tbUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tbUser);

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 295, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(119, 119, 119)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.abrirFormularioDeEscritura(FormEscOpcion.CREAR);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmUserLec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmUserLec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmUserLec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmUserLec.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmUserLec().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tbUser;
    // End of variables declaration//GEN-END:variables
}
